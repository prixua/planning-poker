apiVersion: apps/v1
kind: Deployment
metadata:
  name: planning-poker-dev
  labels:
    app: planning-poker
    env: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: planning-poker
      env: development
  template:
    metadata:
      labels:
        app: planning-poker
        env: development
    spec:
      containers:
      - name: planning-poker
        image: prixua/planning-poker:latest
        imagePullPolicy: Always  # Forçar pull para testar
        workingDir: /app
        command: ["npm"]
        args: ["start"]
        ports:
        - containerPort: 3000
          name: frontend
        env:
        - name: NODE_ENV
          value: "production"  # Usar production para evitar hot-reload
        - name: HOSTNAME
          value: "0.0.0.0"
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
        resources:
          requests:
            memory: "256Mi"  # Aumentar memória
            cpu: "200m"
          limits:
            memory: "512Mi"  # Aumentar limite
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: planning-poker-service-dev
  labels:
    app: planning-poker
    env: development
spec:
  selector:
    app: planning-poker
    env: development
  ports:
  - name: frontend
    port: 3000
    targetPort: 3000
    nodePort: 30000
    protocol: TCP
  type: NodePort  # Para desenvolvimento local